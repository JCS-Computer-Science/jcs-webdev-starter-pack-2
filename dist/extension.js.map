{"version":3,"file":"extension.js","mappings":"gHAGa,EAAAA,gBAAkB,CAC9B,CAAE,6CAA8C,YAChD,CACC,uCAAwC,CACvC,WAAY,CACXC,OAAQ,cAIX,CAAE,uBAAuB,GACzB,CAAE,0BAA2B,0BAC7B,CACC,0BAA2B,CAC1BC,OAAO,EACPC,UAAU,EACVC,SAAS,IAGX,CAAE,0CAA0C,GAC5C,CAAE,kCAAkC,GACpC,CAAE,gCAAgC,K,oaCvBnC,eACA,SACA,SAWA,oBAA+BC,G,yCAC9BC,QAAQC,IAAI,wCACZ,IAAIC,EAAaC,EAAOC,SAASC,gBAChC,0CACA,IAAY,EAAD,gCAbc,IAAOC,EAc/BN,QAAQC,IAAIM,KAAKC,UAAU,EAAAd,gBAAiB,KAAM,UAdnBY,EAeN,EAAAZ,gBAfoC,OAAD,6BAC9DY,EAASG,SAAeC,GAAY,OAAD,6BAClC,MAAM,IAAEC,EAAG,MAAEC,IAAU,IAAAC,mBAAkBH,SACnCP,EAAOW,UACXC,mBACAC,OAAOL,EAAKC,EAAOT,EAAOc,oBAAoBC,uBAWzCf,EAAOgB,OAAOC,uBACnB,wCAIHrB,EAAQsB,cAAcC,KAAKpB,OAE5B,2B,wFCvBa,EAAAW,kBAAqBU,IAA0B,CAC3DZ,IAAKa,OAAOC,KAAKF,GAAQ,GACzBX,MAAOY,OAAOE,OAAOH,GAAQ,M,QCN9BI,EAAOC,QAAUC,QAAQ,YCCrBC,EAA2B,GCE3BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaN,QAGrB,IAAID,EAASG,EAAyBG,GAAY,CAGjDL,QAAS,IAOV,OAHAQ,EAAoBH,GAAUI,KAAKV,EAAOC,QAASD,EAAQA,EAAOC,QAASI,GAGpEL,EAAOC,QClBWI,CAAoB,K","sources":["webpack://jcs-webdev-starter-pack-2/./src/defaultSettings.ts","webpack://jcs-webdev-starter-pack-2/./src/extension.ts","webpack://jcs-webdev-starter-pack-2/./src/utils.ts","webpack://jcs-webdev-starter-pack-2/external commonjs \"vscode\"","webpack://jcs-webdev-starter-pack-2/webpack/bootstrap","webpack://jcs-webdev-starter-pack-2/webpack/startup"],"sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\r\nimport { GeneralObject } from \"./utils\";\r\n\r\nexport const defaultSettings = [\r\n\t{ \"terminal.integrated.defaultProfile.windows\": \"Git Bash\" },\r\n\t{\r\n\t\t\"terminal.integrated.profiles.windows\": {\r\n\t\t\t\"Git Bash\": {\r\n\t\t\t\tsource: \"Git Bash\",\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t{ \"editor.formatOnSave\": true },\r\n\t{ \"editor.defaultFormatter\": \"esbenp.prettier-vscode\" },\r\n\t{\r\n\t\t\"editor.quickSuggestions\": {\r\n\t\t\tother: true,\r\n\t\t\tcomments: true,\r\n\t\t\tstrings: true,\r\n\t\t},\r\n\t},\r\n\t{ \"editor.bracketPairColorization.enabled\": true },\r\n\t{ \"liveServer.settings.fullReload\": true },\r\n\t{ \"tailwindCSS.emmetCompletions\": true },\r\n] as GeneralObject[];\r\n","import * as vscode from \"vscode\";\nimport { extractAsKeyValue, GeneralObject } from \"./utils\";\nimport { defaultSettings } from \"./defaultSettings\";\n\nconst updateUserSettings = async (settings: GeneralObject[]) => {\n\tsettings.forEach(async (setting) => {\n\t\tconst { key, value } = extractAsKeyValue(setting);\n\t\tawait vscode.workspace\n\t\t\t.getConfiguration()\n\t\t\t.update(key, value, vscode.ConfigurationTarget.Global);\n\t});\n};\n\nexport async function activate(context: vscode.ExtensionContext) {\n\tconsole.log(\"JCS Web Dev Starter Pack 2 Activated\");\n\tlet disposable = vscode.commands.registerCommand(\n\t\t\"jcs-webdev-starter-pack-2.updateConfig\",\n\t\tasync () => {\n\t\t\tconsole.log(JSON.stringify(defaultSettings, null, 1));\n\t\t\tawait updateUserSettings(defaultSettings);\n\t\t\tawait vscode.window.showInformationMessage(\n\t\t\t\t\"Settings Update for JCS Web Dev\"\n\t\t\t);\n\t\t}\n\t);\n\tcontext.subscriptions.push(disposable);\n}\nexport function deactivate() {}\n","export interface GeneralObject {\r\n\t[index: string]: any;\r\n}\r\n\r\nexport const extractAsKeyValue = (object: GeneralObject) => ({\r\n\tkey: Object.keys(object)[0],\r\n\tvalue: Object.values(object)[0],\r\n});\r\n","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(112);\n"],"names":["defaultSettings","source","other","comments","strings","context","console","log","disposable","vscode","commands","registerCommand","settings","JSON","stringify","forEach","setting","key","value","extractAsKeyValue","workspace","getConfiguration","update","ConfigurationTarget","Global","window","showInformationMessage","subscriptions","push","object","Object","keys","values","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}